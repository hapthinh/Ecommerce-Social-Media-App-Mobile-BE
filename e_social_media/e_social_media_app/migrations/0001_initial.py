# Generated by Django 5.1.1 on 2024-09-10 15:45

import ckeditor.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('phone_number', models.CharField(max_length=255, null=True, unique=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='images/accounts/avatar/%Y/%m')),
                ('cover_avatar', models.ImageField(blank=True, null=True, upload_to='images/accounts/cover_avatar/%Y/%m')),
                ('account_status', models.BooleanField(default=False)),
                ('gender', models.BooleanField(default=True, null=True)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('category_name', models.TextField()),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConfirmStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('confirm_status_value', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PollOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('option_text', models.CharField(max_length=255)),
                ('vote_count', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('post_image_url', models.ImageField(blank=True, null=True, upload_to='images/post_images/%Y/%m')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('reaction_name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('role_name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('post_content', ckeditor.fields.RichTextField()),
                ('comment_lock', models.BooleanField(default=False)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.account')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('comment_content', models.TextField()),
                ('comment_image_url', models.ImageField(blank=True, null=True, upload_to='images/comments/%Y/%m')),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.account')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.post')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PostPoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=255)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('is_closed', models.BooleanField(default=False)),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.post')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PollResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.account')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.polloption')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.postpoll')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='polloption',
            name='poll',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='e_social_media_app.postpoll'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('product_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.category')),
                ('images', models.ManyToManyField(blank=True, to='e_social_media_app.postimage')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='post',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.product'),
        ),
        migrations.CreateModel(
            name='PostReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.account')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.post')),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.reaction')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='account',
            name='role',
            field=models.ForeignKey(default=3, on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.role'),
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('received_message_date', models.DateTimeField(auto_now=True)),
                ('seen', models.BooleanField(default=False)),
                ('first_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='first_user_room', to='e_social_media_app.account')),
                ('second_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='second_user_room', to='e_social_media_app.account')),
            ],
            options={
                'unique_together': {('first_user', 'second_user')},
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('content', models.CharField(max_length=10000)),
                ('who_sent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.account')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.room')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('confirm_status', models.ForeignKey(default=3, on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.confirmstatus')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.user'),
        ),
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='e_social_media_app.user'),
        ),
    ]
